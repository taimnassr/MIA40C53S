for(i in 1:length(group1)){
grp1_rows[[i]] <- colData(dds)[[group1[[i]][1]]] %in% group1[[i]][2:length(group1[[i]])]
}
for(i in 1:length(group2)){
grp2_rows[[i]] <- colData(dds)[[group2[[i]][1]]] %in% group2[[i]][2:length(group2[[i]])]
}
grp1_rows <- Reduce(function(x, y) x & y, grp1_rows)
grp2_rows <- Reduce(function(x, y) x & y, grp2_rows)
mod_mat1 <- mod_mat[grp1_rows, ,drop=F]
mod_mat2 <- mod_mat[grp2_rows, ,drop=F]
if(!weighted){
mod_mat1 <- mod_mat1[!duplicated(mod_mat1),,drop=F]
mod_mat2 <- mod_mat2[!duplicated(mod_mat2),,drop=F]
}
return(colMeans(mod_mat1)-colMeans(mod_mat2))
}
library(DESeq2)
coldata$condition = factor(coldata$condition,
levels = c("WT", "C53S"))
rownames(count_matrix) = make.unique(rownames(count_matrix))
dds <- DESeqDataSetFromMatrix(countData = count_matrix,
colData = coldata,
design = ~ condition + time + condition:time)
dds <- DESeq(dds)
resultsNames(dds)
####ok now we want to try what is mentioned in
#the tutorial according to section 3.2.5
#I will reload the dds object and coldata
### from above
res_c53s_24 =results(dds,
contrast = list("conditionC53S.time24h"))
res_c53s_24 = as.data.frame(res_c53s_24)
head(res_c53s_24)
res_c53s_24 = na.omit(res_c53s_24)
head(res_c53s_24)
deg_c53s_24 = res_c53s_24[abs(res_c53s_24$log2FoldChange) > 1 &
res_c53s_24$padj < 0.05,]
deg_c53s_24
deg_c53s_24
deg_c53s_24 = res_c53s_24[abs(res_c53s_24$log2FoldChange) > 0.5 &
res_c53s_24$padj < 0.05,]
deg_c53s_24
write.csv(res_c53s_24,
"count_data/DESeq2_results_C53S_24h_vs_0h_vs_WT.csv")
volcano_plots = function(df, title,
log2fc_threshold = 1,
padj_threshold = 0.05){
#df should be containing DESEQ log2fc results as dataframe
#there should be a column with the log2foldchange
#called log2FoldChange  and a column called padj
## also there should be a column called significance
# to check whether a gene is considered DEG or not
#also the rownames should contain the gene names
col_names = c("log2FoldChange", "padj")
if(!all( col_names %in%
colnames(df))){
stop("Missing columns: log2FoldChange or padj")
}
#conditon name is like mock vs wt
#sig_threshold is what value should the abs log2fc  be higher
#than. usually it is 1 unless you used another sig_threshold
df$significance = "Non-Significant"
df$significance[abs(df$log2FoldChange) > log2fc_threshold &
df$padj < padj_threshold] = "Significant"
df$padj[df$padj == 0] = 1e-100
sig_df = df[df$significance == "Significant",]#this is the
#significant df
sig_df$gene = rownames(sig_df)
library(ggplot2)
library(ggrepel)
title = paste ("DESeq2 Results", title )
plot = ggplot(df,
aes(x = log2FoldChange,
y = -log10(padj + 0.))) +
geom_point(aes(colour = significance)) +
scale_color_manual(values = c("Significant" = "red",
"Non-Significant" = "grey"))+
labs(title = title,
x = "Log2FC",
y = "-log10(P. adjusted)")+
geom_text_repel(data = sig_df,
mapping = aes(x = log2FoldChange,
y = -log10(padj),
label = gene),
size = 3,
max.overlaps = 30)+
geom_vline(xintercept = c(-log2fc_threshold,
log2fc_threshold), color = "blue")+
geom_hline(yintercept = -log10(padj_threshold),
,color = "blue") +
ylim(c(0,200)) +
scale_x_continuous(breaks = seq(-5,5, by  = 1),
labels = seq(-5,5, by = 1),
limits = c(-5,5))
return(plot)
}
### no will graph the volcano plot
c53s_24_volcano = volcano_plots(deg_c53s_24,
title = "C53S 24h vs 0h vs WT",
log2fc_threshold = 0.5,
padj_threshold = 0.05)
c53s_24_volcano
### no will graph the volcano plot
c53s_24_volcano = volcano_plots(res_c53s_24,
title = "C53S 24h vs 0h vs WT",
log2fc_threshold = 0.5,
padj_threshold = 0.05)
c53s_24_volcano
### no will graph the volcano plot
c53s_24_volcano = volcano_plots(res_c53s_24,
title = "C53S 24h vs 0h vs WT",
log2fc_threshold = 0.5,
padj_threshold = 0.05)
c53s_24_volcano
res_c53s_24
head(res_c53s_24)
##here you have the functions used in the analysis
## to create volcano plots from DESEQ data results
volcano_plots = function(df, title,
log2fc_threshold = 1,
padj_threshold = 0.05){
#df should be containing DESEQ log2fc results as dataframe
#there should be a column with the log2foldchange
#called log2FoldChange  and a column called padj
## also there should be a column called significance
# to check whether a gene is considered DEG or not
#also the rownames should contain the gene names
col_names = c("log2FoldChange", "padj")
if(!all( col_names %in%
colnames(df))){
stop("Missing columns: log2FoldChange or padj")
}
#conditon name is like mock vs wt
#sig_threshold is what value should the abs log2fc  be higher
#than. usually it is 1 unless you used another sig_threshold
df$significance = "Non-Significant"
df$significance[abs(df$log2FoldChange) > log2fc_threshold &
df$padj < padj_threshold] = "Significant"
df$padj[df$padj == 0] = 1e-100
sig_df = df[df$significance == "Significant",]#this is the
#significant df
sig_df$gene = rownames(sig_df)
library(ggplot2)
library(ggrepel)
title = paste ("DESeq2 Results", title )
plot = ggplot(df,
aes(x = log2FoldChange,
y = -log10(padj))) +
geom_point(aes(colour = significance)) +
scale_color_manual(values = c("Significant" = "red",
"Non-Significant" = "grey"))+
labs(title = title,
x = "Log2FC",
y = "-log10(P. adjusted)")+
geom_text_repel(data = sig_df,
mapping = aes(x = log2FoldChange,
y = -log10(padj),
label = gene),
size = 3,
max.overlaps = 30)+
geom_vline(xintercept = c(-log2fc_threshold,
log2fc_threshold), color = "blue")+
geom_hline(yintercept = -log10(padj_threshold),
,color = "blue") +
ylim(c(0,200)) +
scale_x_continuous(breaks = seq(-5,5, by  = 1),
labels = seq(-5,5, by = 1),
limits = c(-5,5))
return(plot)
}
### no will graph the volcano plot
c53s_24_volcano = volcano_plots(res_c53s_24,
title = "C53S 24h vs 0h vs WT",
log2fc_threshold = 0.5,
padj_threshold = 0.05)
c53s_24_volcano
#df should be containing DESEQ log2fc results as dataframe
#there should be a column with the log2foldchange
#called log2FoldChange  and a column called padj
## also there should be a column called significance
# to check whether a gene is considered DEG or not
df = res_c53s_24
log2fc_threshold = 0.05
log2fc_threshold = 0.5
padj_threshold = 0.05
#also the rownames should contain the gene names
col_names = c("log2FoldChange", "padj")
if(!all( col_names %in%
colnames(df))){
stop("Missing columns: log2FoldChange or padj")
}
#sig_threshold is what value should the abs log2fc  be higher
#than. usually it is 1 unless you used another sig_threshold
df$significance = "Non-Significant"
head(df)
df$significance[abs(df$log2FoldChange) > log2fc_threshold &
df$padj < padj_threshold] = "Significant"
df[df$significance == "Significant",]
sig_df = df[df$significance == "Significant",]#this is the
df$padj[df$padj == 0] = 1e-100
sig_df = df[df$significance == "Significant",]#this is the
sig_df
#significant df
sig_df$gene = rownames(sig_df)
sig_df
library(ggplot2)
library(ggrepel)
title = paste ("DESeq2 Results", title )
title = "c53s"
title = paste ("DESeq2 Results", title )
plot = ggplot(df,
aes(x = log2FoldChange,
y = -log10(padj))) +
geom_point(aes(colour = significance)) +
scale_color_manual(values = c("Significant" = "red",
"Non-Significant" = "grey"))+
labs(title = title,
x = "Log2FC",
y = "-log10(P. adjusted)")+
geom_text_repel(data = sig_df,
mapping = aes(x = log2FoldChange,
y = -log10(padj),
label = gene),
size = 3,
max.overlaps = 30)+
geom_vline(xintercept = c(-log2fc_threshold,
log2fc_threshold), color = "blue")+
geom_hline(yintercept = -log10(padj_threshold),
,color = "blue") +
ylim(c(0,200)) +
scale_x_continuous(breaks = seq(-5,5, by  = 1),
labels = seq(-5,5, by = 1),
limits = c(-5,5))
plot
plot = ggplot(df,
aes(x = log2FoldChange,
y = -log10(padj))) +
geom_point(aes(colour = significance)) +
scale_color_manual(values = c("Significant" = "red",
"Non-Significant" = "grey"))
plot
plot = ggplot(df,
aes(x = log2FoldChange,
y = -log10(padj))) +
geom_point(aes(colour = significance)) +
scale_color_manual(values = c("Significant" = "red",
"Non-Significant" = "grey"))+
labs(title = title,
x = "Log2FC",
y = "-log10(P. adjusted)")+
plot
plot = ggplot(df,
aes(x = log2FoldChange,
y = -log10(padj))) +
geom_point(aes(colour = significance)) +
scale_color_manual(values = c("Significant" = "red",
"Non-Significant" = "grey"))+
labs(title = title,
x = "Log2FC",
y = "-log10(P. adjusted)")
plot
plot = ggplot(df,
aes(x = log2FoldChange,
y = -log10(padj))) +
geom_point(aes(colour = significance)) +
scale_color_manual(values = c("Significant" = "red",
"Non-Significant" = "grey"))+
labs(title = title,
x = "Log2FC",
y = "-log10(P. adjusted)")+
geom_text_repel(data = sig_df,
mapping = aes(x = log2FoldChange,
y = -log10(padj),
label = gene),
size = 3,
max.overlaps = 30)
plot
sig_df
plot = ggplot(df,
aes(x = log2FoldChange,
y = -log10(padj))) +
geom_point(aes(colour = significance)) +
scale_color_manual(values = c("Significant" = "red",
"Non-Significant" = "grey"))+
labs(title = title,
x = "Log2FC",
y = "-log10(P. adjusted)")+
geom_text_repel(data = sig_df,
mapping = aes(x = log2FoldChange,
y = -log10(padj),
label = gene),
size = 3)
plot
nrow(sig_df)
sig_df
plot = ggplot(df,
aes(x = log2FoldChange,
y = -log10(padj))) +
geom_point(aes(colour = significance)) +
scale_color_manual(values = c("Significant" = "red",
"Non-Significant" = "grey"))+
labs(title = title,
x = "Log2FC",
y = "-log10(P. adjusted)")+
geom_text_repel(data = sig_df,
mapping = aes(x = log2FoldChange,
y = -log10(padj),
label = gene),
size = 3,
max.overlaps = 30)+
geom_vline(xintercept = c(-log2fc_threshold,
log2fc_threshold), color = "blue")+
geom_hline(yintercept = -log10(padj_threshold),
color = "blue") +
scale_x_continuous(breaks = seq(-5,5, by  = 1),
labels = seq(-5,5, by = 1),
limits = c(-5,5))
plot
sig_df
-log(sig_df$padj)
-log10(sig_df$padj)
sig_df$label
sig_df$gene
sig_df$log2FoldChange
sig_df$log2FoldChange + 1
sig_df
is.na(-log10(sig_df$padj))
is.infinite(-log10(sig_df$padj))
is.na(-log10(sig_df$log2FoldChange))
is.na(-log10(sig_df$gene))
plot = ggplot(df,
aes(x = log2FoldChange,
y = -log10(padj))) +
geom_point(aes(colour = significance)) +
scale_color_manual(values = c("Significant" = "red",
"Non-Significant" = "grey"))+
labs(title = title,
x = "Log2FC",
y = "-log10(P. adjusted)")+
geom_text(data = sig_df,
mapping = aes(x = log2FoldChange,
y = -log10(padj),
label = gene),
size = 3,
max.overlaps = 30)+
geom_vline(xintercept = c(-log2fc_threshold,
log2fc_threshold), color = "blue")+
geom_hline(yintercept = -log10(padj_threshold),
color = "blue") +
scale_x_continuous(breaks = seq(-5,5, by  = 1),
labels = seq(-5,5, by = 1),
limits = c(-5,5))
ggplot(df,
aes(x = log2FoldChange,
y = -log10(padj))) +
geom_point(aes(colour = significance)) +
scale_color_manual(values = c("Significant" = "red",
"Non-Significant" = "grey"))+
labs(title = title,
x = "Log2FC",
y = "-log10(P. adjusted)")+
geom_text(data = sig_df,
mapping = aes(x = log2FoldChange,
y = -log10(padj),
label = gene),
size = 3)+
geom_vline(xintercept = c(-log2fc_threshold,
log2fc_threshold), color = "blue")+
geom_hline(yintercept = -log10(padj_threshold),
color = "blue") +
scale_x_continuous(breaks = seq(-5,5, by  = 1),
labels = seq(-5,5, by = 1),
limits = c(-5,5))
ggplot(df,
aes(x = log2FoldChange,
y = -log10(padj))) +
geom_point(aes(colour = significance)) +
scale_color_manual(values = c("Significant" = "red",
"Non-Significant" = "grey"))+
labs(title = title,
x = "Log2FC",
y = "-log10(P. adjusted)")+
geom_text_repel(data = sig_df,
mapping = aes(x = log2FoldChange,
y = -log10(padj),
label = gene),
size = 3,
max.overlaps = Inf)+
geom_vline(xintercept = c(-log2fc_threshold,
log2fc_threshold), color = "blue")+
geom_hline(yintercept = -log10(padj_threshold),
color = "blue") +
scale_x_continuous(breaks = seq(-5,5, by  = 1),
labels = seq(-5,5, by = 1),
limits = c(-5,5))
ggplot(df,
aes(x = log2FoldChange,
y = -log10(padj))) +
geom_point(aes(colour = significance)) +
scale_color_manual(values = c("Significant" = "red",
"Non-Significant" = "grey"))+
labs(title = title,
x = "Log2FC",
y = "-log10(P. adjusted)")+
geom_text_repel(data = sig_df,
mapping = aes(x = log2FoldChange,
y = -log10(padj),
label = gene),
size = 3,
nudge_y = 0.1)+
geom_vline(xintercept = c(-log2fc_threshold,
log2fc_threshold), color = "blue")+
geom_hline(yintercept = -log10(padj_threshold),
color = "blue") +
scale_x_continuous(breaks = seq(-5,5, by  = 1),
labels = seq(-5,5, by = 1),
limits = c(-5,5))
ggplot(df,
aes(x = log2FoldChange,
y = -log10(padj))) +
geom_point(aes(colour = significance)) +
scale_color_manual(values = c("Significant" = "red",
"Non-Significant" = "grey"))+
labs(title = title,
x = "Log2FC",
y = "-log10(P. adjusted)")+
geom_text_repel(data = sig_df,
mapping = aes(x = log2FoldChange,
y = -log10(padj),
label = gene),
max.overlaps = 30)+
geom_vline(xintercept = c(-log2fc_threshold,
log2fc_threshold), color = "blue")+
geom_hline(yintercept = -log10(padj_threshold),
color = "blue") +
scale_x_continuous(breaks = seq(-5,5, by  = 1),
labels = seq(-5,5, by = 1),
limits = c(-5,5))
title = "C53S vs WT (24h vs 0h)"
title = paste ("DESeq2 Results", title )
ggplot(df,
aes(x = log2FoldChange,
y = -log10(padj))) +
geom_point(aes(colour = significance)) +
scale_color_manual(values = c("Significant" = "red",
"Non-Significant" = "grey"))+
labs(title = title,
x = "Log2FC",
y = "-log10(P. adjusted)")+
geom_text(data = sig_df,
mapping = aes(x = log2FoldChange,
y = -log10(padj),
label = gene),
size = 2)+
geom_vline(xintercept = c(-log2fc_threshold,
log2fc_threshold), color = "blue")+
geom_hline(yintercept = -log10(padj_threshold),
color = "blue") +
scale_x_continuous(breaks = seq(-5,5, by  = 1),
labels = seq(-5,5, by = 1),
limits = c(-5,5))
plot = ggplot(df,
aes(x = log2FoldChange,
y = -log10(padj))) +
geom_point(aes(colour = significance)) +
scale_color_manual(values = c("Significant" = "red",
"Non-Significant" = "grey"))+
labs(title = title,
x = "Log2FC",
y = "-log10(P. adjusted)")+
geom_text(data = sig_df,
mapping = aes(x = log2FoldChange,
y = -log10(padj),
label = gene),
size = 2)+
geom_vline(xintercept = c(-log2fc_threshold,
log2fc_threshold), color = "blue")+
geom_hline(yintercept = -log10(padj_threshold),
color = "blue") +
scale_x_continuous(breaks = seq(-5,5, by  = 1),
labels = seq(-5,5, by = 1),
limits = c(-5,5))
pdf("plots/Volcano_plots/Volcano_plot_C53S_vs_WT_24h_vs_0h.pdf",
height = 8,width = 10)
plot
dev.off()
plot = ggplot(df,
aes(x = log2FoldChange,
y = -log10(padj))) +
geom_point(aes(colour = significance)) +
scale_color_manual(values = c("Significant" = "red",
"Non-Significant" = "grey"))+
labs(title = title,
x = "Log2FC",
y = "-log10(P. adjusted)")+
geom_text(data = sig_df,
mapping = aes(x = log2FoldChange,
y = -log10(padj),
label = gene),
size = 4)+
geom_vline(xintercept = c(-log2fc_threshold,
log2fc_threshold), color = "blue")+
geom_hline(yintercept = -log10(padj_threshold),
color = "blue") +
scale_x_continuous(breaks = seq(-5,5, by  = 1),
labels = seq(-5,5, by = 1),
limits = c(-5,5))
pdf("plots/Volcano_plots/Volcano_plot_C53S_vs_WT_24h_vs_0h.pdf",
height = 8,width = 10)
plot
dev.off()
2 ^ 0.5
